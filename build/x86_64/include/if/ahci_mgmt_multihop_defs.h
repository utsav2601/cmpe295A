#ifndef __ahci_mgmt_MULTIHOP_H
#define __ahci_mgmt_MULTIHOP_H 1
/*
 * Copyright (c) 2010, ETH Zurich.
 * All rights reserved.
 * 
 * INTERFACE NAME: ahci_mgmt
 * INTEFACE FILE: ../if/ahci_mgmt.if
 * INTERFACE DESCRIPTION: AHCI Management Daemon
 * 
 * This file is distributed under the terms in the attached LICENSE
 * file. If you do not find this file, copies can be found by
 * writing to:
 * ETH Zurich D-INFK, Universitaetstr.6, CH-8092 Zurich.
 * Attn: Systems Group.
 * 
 * THIS FILE IS AUTOMATICALLY GENERATED BY FLOUNDER: DO NOT EDIT!
 */

/*
 * Multihop interconnect driver
 */

#include <barrelfish/multihop_chan.h>

struct ahci_mgmt_multihop_binding {
    struct ahci_mgmt_binding b;
    struct multihop_chan chan;
    void *message;
    struct flounder_cap_state capst;
    bool trigger_chan;
};

extern  void ahci_mgmt_multihop_init(struct ahci_mgmt_multihop_binding *b, struct waitset *waitset);
extern  void ahci_mgmt_multihop_destroy(struct ahci_mgmt_multihop_binding *b);
extern  errval_t ahci_mgmt_multihop_bind(struct ahci_mgmt_multihop_binding *mb, iref_t iref, ahci_mgmt_bind_continuation_fn *_continuation, void *st, struct waitset *waitset, idc_bind_flags_t flags);
extern  errval_t ahci_mgmt_multihop_connect_handler(void *st, multihop_vci_t vci);
extern  void ahci_mgmt_multihop_rx_handler(void *arg, uint8_t *message, size_t message_len);
extern  void ahci_mgmt_multihop_caps_rx_handler(void *arg, errval_t success, struct capref cap, uint32_t capid);

#endif // __ahci_mgmt_MULTIHOP_H
