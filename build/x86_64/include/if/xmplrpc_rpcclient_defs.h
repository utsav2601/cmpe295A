#ifndef __xmplrpc_RPC_CLIENT_H
#define __xmplrpc_RPC_CLIENT_H 1
/*
 * Copyright (c) 2010, ETH Zurich.
 * All rights reserved.
 * 
 * INTERFACE NAME: xmplrpc
 * INTEFACE FILE: ../if/xmplrpc.if
 * INTERFACE DESCRIPTION: Example rpc interface
 * 
 * This file is distributed under the terms in the attached LICENSE
 * file. If you do not find this file, copies can be found by
 * writing to:
 * ETH Zurich D-INFK, Universitaetstr.6, CH-8092 Zurich.
 * Attn: Systems Group.
 * 
 * THIS FILE IS AUTOMATICALLY GENERATED BY FLOUNDER: DO NOT EDIT!
 */

/*
 * RPC client
 */

#include <if/xmplrpc_defs.h>

/*
 * Forward declaration of binding type
 */
struct xmplrpc_rpc_client;

/*
 * Function signatures
 */
typedef  errval_t xmplrpc_myrpc__rpc_method_fn(struct xmplrpc_rpc_client *_rpc, int32_t i, char **s);

/*
 * VTable struct definition for the interface
 */
struct xmplrpc_rpc_vtbl {
    xmplrpc_myrpc__rpc_method_fn *myrpc;
};

/*
 * The Binding structure
 */
struct xmplrpc_rpc_client {
    struct xmplrpc_binding *b;
    struct xmplrpc_rpc_vtbl vtbl;
    bool rpc_in_progress;
    bool reply_present;
    errval_t async_error;
    struct waitset rpc_waitset;
    struct waitset_chanstate dummy_chanstate;
};

/*
 * Function to initialise an RPC client
 */
extern  errval_t xmplrpc_rpc_client_init(struct xmplrpc_rpc_client *rpc, struct xmplrpc_binding *binding);

#endif // __xmplrpc_RPC_CLIENT_H
