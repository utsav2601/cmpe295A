#ifndef __e10k_vf_RPC_CLIENT_H
#define __e10k_vf_RPC_CLIENT_H 1
/*
 * Copyright (c) 2010, ETH Zurich.
 * All rights reserved.
 * 
 * INTERFACE NAME: e10k_vf
 * INTEFACE FILE: ../if/e10k_vf.if
 * INTERFACE DESCRIPTION: e10k VF/PF interface
 * 
 * This file is distributed under the terms in the attached LICENSE
 * file. If you do not find this file, copies can be found by
 * writing to:
 * ETH Zurich D-INFK, Universitaetstr.6, CH-8092 Zurich.
 * Attn: Systems Group.
 * 
 * THIS FILE IS AUTOMATICALLY GENERATED BY FLOUNDER: DO NOT EDIT!
 */

/*
 * RPC client
 */

#include <if/e10k_vf_defs.h>

/*
 * Forward declaration of binding type
 */
struct e10k_vf_rpc_client;

/*
 * Function signatures
 */
typedef  errval_t e10k_vf_get_mac_address__rpc_method_fn(struct e10k_vf_rpc_client *_rpc, uint8_t vfn, uint64_t *mac);
typedef  errval_t e10k_vf_init_done__rpc_method_fn(struct e10k_vf_rpc_client *_rpc, uint8_t vfn);

/*
 * VTable struct definition for the interface
 */
struct e10k_vf_rpc_vtbl {
    e10k_vf_get_mac_address__rpc_method_fn *get_mac_address;
    e10k_vf_init_done__rpc_method_fn *init_done;
};

/*
 * The Binding structure
 */
struct e10k_vf_rpc_client {
    struct e10k_vf_binding *b;
    struct e10k_vf_rpc_vtbl vtbl;
    bool rpc_in_progress;
    bool reply_present;
    errval_t async_error;
    struct waitset rpc_waitset;
    struct waitset_chanstate dummy_chanstate;
};

/*
 * Function to initialise an RPC client
 */
extern  errval_t e10k_vf_rpc_client_init(struct e10k_vf_rpc_client *rpc, struct e10k_vf_binding *binding);

#endif // __e10k_vf_RPC_CLIENT_H
