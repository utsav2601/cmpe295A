#ifndef __terminal_session_RPC_CLIENT_H
#define __terminal_session_RPC_CLIENT_H 1
/*
 * Copyright (c) 2010, ETH Zurich.
 * All rights reserved.
 * 
 * INTERFACE NAME: terminal_session
 * INTEFACE FILE: ../if/terminal_session.if
 * INTERFACE DESCRIPTION: Terminal Session Interface
 * 
 * This file is distributed under the terms in the attached LICENSE
 * file. If you do not find this file, copies can be found by
 * writing to:
 * ETH Zurich D-INFK, Universitaetstr.6, CH-8092 Zurich.
 * Attn: Systems Group.
 * 
 * THIS FILE IS AUTOMATICALLY GENERATED BY FLOUNDER: DO NOT EDIT!
 */

/*
 * RPC client
 */

#include <if/terminal_session_defs.h>

/*
 * Forward declaration of binding type
 */
struct terminal_session_rpc_client;

/*
 * Function signatures
 */
typedef  errval_t terminal_session_session_associate_with_terminal__rpc_method_fn(struct terminal_session_rpc_client *_rpc, struct capref session_id, iref_t *in_iref, iref_t *out_iref, iref_t *conf_iref, terminal_session_errval_t *err);

/*
 * VTable struct definition for the interface
 */
struct terminal_session_rpc_vtbl {
    terminal_session_session_associate_with_terminal__rpc_method_fn *session_associate_with_terminal;
};

/*
 * The Binding structure
 */
struct terminal_session_rpc_client {
    struct terminal_session_binding *b;
    struct terminal_session_rpc_vtbl vtbl;
    bool rpc_in_progress;
    bool reply_present;
    errval_t async_error;
    struct waitset rpc_waitset;
    struct waitset_chanstate dummy_chanstate;
};

/*
 * Function to initialise an RPC client
 */
extern  errval_t terminal_session_rpc_client_init(struct terminal_session_rpc_client *rpc, struct terminal_session_binding *binding);

#endif // __terminal_session_RPC_CLIENT_H
