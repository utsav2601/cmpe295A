#ifndef __xeon_phi_manager_RPC_CLIENT_H
#define __xeon_phi_manager_RPC_CLIENT_H 1
/*
 * Copyright (c) 2010, ETH Zurich.
 * All rights reserved.
 * 
 * INTERFACE NAME: xeon_phi_manager
 * INTEFACE FILE: ../if/xeon_phi_manager.if
 * INTERFACE DESCRIPTION: Xeon Phi Manager Interface
 * 
 * This file is distributed under the terms in the attached LICENSE
 * file. If you do not find this file, copies can be found by
 * writing to:
 * ETH Zurich D-INFK, Universitaetstr.6, CH-8092 Zurich.
 * Attn: Systems Group.
 * 
 * THIS FILE IS AUTOMATICALLY GENERATED BY FLOUNDER: DO NOT EDIT!
 */

/*
 * RPC client
 */

#include <if/xeon_phi_manager_defs.h>

/*
 * Forward declaration of binding type
 */
struct xeon_phi_manager_rpc_client;

/*
 * Function signatures
 */
typedef  errval_t xeon_phi_manager_register_driver__rpc_method_fn(struct xeon_phi_manager_rpc_client *_rpc, iref_t svc, uint8_t *id, xeon_phi_manager_cards_t *irefs, xeon_phi_manager_errval_t *msgerr);
typedef  errval_t xeon_phi_manager_terminate__rpc_method_fn(struct xeon_phi_manager_rpc_client *_rpc);
typedef  errval_t xeon_phi_manager_lookup__rpc_method_fn(struct xeon_phi_manager_rpc_client *_rpc, uint8_t xid, iref_t *svc, xeon_phi_manager_errval_t *msgerr);

/*
 * VTable struct definition for the interface
 */
struct xeon_phi_manager_rpc_vtbl {
    xeon_phi_manager_register_driver__rpc_method_fn *register_driver;
    xeon_phi_manager_terminate__rpc_method_fn *terminate;
    xeon_phi_manager_lookup__rpc_method_fn *lookup;
};

/*
 * The Binding structure
 */
struct xeon_phi_manager_rpc_client {
    struct xeon_phi_manager_binding *b;
    struct xeon_phi_manager_rpc_vtbl vtbl;
    bool rpc_in_progress;
    bool reply_present;
    errval_t async_error;
    struct waitset rpc_waitset;
    struct waitset_chanstate dummy_chanstate;
};

/*
 * Function to initialise an RPC client
 */
extern  errval_t xeon_phi_manager_rpc_client_init(struct xeon_phi_manager_rpc_client *rpc, struct xeon_phi_manager_binding *binding);

#endif // __xeon_phi_manager_RPC_CLIENT_H
