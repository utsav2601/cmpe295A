#ifndef __virtio_RPC_CLIENT_H
#define __virtio_RPC_CLIENT_H 1
/*
 * Copyright (c) 2010, ETH Zurich.
 * All rights reserved.
 * 
 * INTERFACE NAME: virtio
 * INTEFACE FILE: ../if/virtio.if
 * INTERFACE DESCRIPTION: VirtIO Interface
 * 
 * This file is distributed under the terms in the attached LICENSE
 * file. If you do not find this file, copies can be found by
 * writing to:
 * ETH Zurich D-INFK, Universitaetstr.6, CH-8092 Zurich.
 * Attn: Systems Group.
 * 
 * THIS FILE IS AUTOMATICALLY GENERATED BY FLOUNDER: DO NOT EDIT!
 */

/*
 * RPC client
 */

#include <if/virtio_defs.h>

/*
 * Forward declaration of binding type
 */
struct virtio_rpc_client;

/*
 * Function signatures
 */
typedef  errval_t virtio_open__rpc_method_fn(struct virtio_rpc_client *_rpc, uint8_t backend, virtio_errval_t *err, struct capref *devframe);
typedef  errval_t virtio_close__rpc_method_fn(struct virtio_rpc_client *_rpc);
typedef  errval_t virtio_add__rpc_method_fn(struct virtio_rpc_client *_rpc, uint16_t vq_id, uint16_t ndesc, uint8_t has_buffers, struct capref vring, virtio_errval_t *err);
typedef  errval_t virtio_extend__rpc_method_fn(struct virtio_rpc_client *_rpc, uint16_t vq_id, struct capref vbuf, virtio_errval_t *err);
typedef  errval_t virtio_req__rpc_method_fn(struct virtio_rpc_client *_rpc, uint64_t size, virtio_errval_t *err, struct capref *vring);

/*
 * VTable struct definition for the interface
 */
struct virtio_rpc_vtbl {
    virtio_open__rpc_method_fn *open;
    virtio_close__rpc_method_fn *close;
    virtio_add__rpc_method_fn *add;
    virtio_extend__rpc_method_fn *extend;
    virtio_req__rpc_method_fn *req;
};

/*
 * The Binding structure
 */
struct virtio_rpc_client {
    struct virtio_binding *b;
    struct virtio_rpc_vtbl vtbl;
    bool rpc_in_progress;
    bool reply_present;
    errval_t async_error;
    struct waitset rpc_waitset;
    struct waitset_chanstate dummy_chanstate;
};

/*
 * Function to initialise an RPC client
 */
extern  errval_t virtio_rpc_client_init(struct virtio_rpc_client *rpc, struct virtio_binding *binding);

#endif // __virtio_RPC_CLIENT_H
